@page "/signup"
@using Electionapp.UI.Models
@using Electionapp.UI.Services
@inject SignupAPI SignupAPI
@inject NavigationManager Nav
@rendermode InteractiveServer

<div class="d-flex justify-content-center align-items-start bg-light" style="padding-top: 60px;padding-bottom: 80px; min-height: 100vh;">
    <div class="card shadow-lg p-4" style="width: 420px; border-radius: 12px;">
        <div class="text-center mb-4">
            <img src="favicon.png" alt="Logo" width="60" class="mb-3" />
            <h3 class="fw-bold">Create an Account</h3>
            <p class="text-muted">Fill in the details below to get started</p>
        </div>

        <EditForm Model="@signupModel">
            <div class="mb-3">
                <label class="form-label fw-semibold">First Name</label>
                <InputText @bind-Value="signupModel.FirstName" class="form-control" placeholder="Enter first name" />
                @if (apiErrors.ContainsKey("FirstName"))
                {
                    foreach (var err in apiErrors["FirstName"])
                    {
                        <small class="text-danger">@err</small>
                    }
                }
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold">Last Name</label>
                <InputText @bind-Value="signupModel.LastName" class="form-control" placeholder="Enter last name" />
                @if (apiErrors.ContainsKey("LastName"))
                {
                    foreach (var err in apiErrors["LastName"])
                    {
                        <small class="text-danger">@err</small>
                    }
                }
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold">Username</label>
                <InputText @bind-Value="signupModel.Username" class="form-control" placeholder="Choose a username" />
                @if (apiErrors.ContainsKey("Username"))
                {
                    foreach (var err in apiErrors["Username"])
                    {
                        <small class="text-danger">@err</small>
                    }
                }
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold">Phone Number</label>
                <InputNumber @bind-Value="signupModel.PhoneNumber" class="form-control" placeholder="Enter phone number" />
                @if (apiErrors.ContainsKey("PhoneNumber"))
                {
                    foreach (var err in apiErrors["PhoneNumber"])
                    {
                        <small class="text-danger">@err</small>
                    }
                }
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold">Email</label>
                <InputText @bind-Value="signupModel.Email" class="form-control" placeholder="Enter email address" />
                @if (apiErrors.ContainsKey("Email"))
                {
                    foreach (var err in apiErrors["Email"])
                    {
                        <small class="text-danger">@err</small>
                    }
                }
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold">Password</label>
                <InputText @bind-Value="signupModel.Password" type="password" class="form-control" placeholder="Create a password" />
                @if (apiErrors.ContainsKey("Password"))
                {
                    foreach (var err in apiErrors["Password"])
                    {
                        <small class="text-danger">@err</small>
                    }
                }
            </div>

            <div class="mb-4">
                <label class="form-label fw-semibold">Confirm Password</label>
                <InputText @bind-Value="signupModel.ConfirmPassword" type="password" class="form-control" placeholder="Re-enter password" />
                @if (apiErrors.ContainsKey("ConfirmPassword"))
                {
                    foreach (var err in apiErrors["ConfirmPassword"])
                    {
                        <small class="text-danger">@err</small>
                    }
                }
            </div>

            <button type="button" class="btn btn-success w-100 mb-3" style="border-radius: 8px;" @onclick="HandleSignup">
                Create Account
            </button>

            <div class="text-center">
                <span class="text-muted">Already have an account?</span>
                <a href="/" class="fw-semibold"> Login here</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private SignupDto signupModel = new();
    private Dictionary<string, string[]> apiErrors = new();

    private async Task HandleSignup()
    {
        var (success, errors) = await SignupAPI.SignupAsync(signupModel);

        if (success)
        {
            apiErrors.Clear();
            signupModel = new();
            Nav.NavigateTo("/home?msg=SignupSuccess");
        }
        else
        {
            apiErrors = errors;
            StateHasChanged();
        }
    }
}
