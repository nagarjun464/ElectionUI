@page "/"
@using Electionapp.UI.Models
@using Electionapp.UI.Services
@inject SignupAPI SignupAPI
@inject NavigationManager Nav
@rendermode InteractiveServer

<div class="signup-container">
    <div class="signup-card">
        <h2>Signup</h2>

        <EditForm Model="@signupModel">
            <div class="form-group">
                <label>First Name</label>
                <InputText @bind-Value="signupModel.FirstName" class="form-control" />
                @if (apiErrors.ContainsKey("FirstName"))
                {
                    foreach (var err in apiErrors["FirstName"])
                    {
                        <p style="color:red">@err</p>
                    }
                }
            </div>

            <div class="form-group">
                <label>Last Name</label>
                <InputText @bind-Value="signupModel.LastName" class="form-control" />
                @if (apiErrors.ContainsKey("LastName"))
                {
                    foreach (var err in apiErrors["LastName"])
                    {
                        <p style="color:red">@err</p>
                    }
                }
            </div>

            <div class="form-group">
                <label>Username</label>
                <InputText @bind-Value="signupModel.Username" class="form-control" />
                @if (apiErrors.ContainsKey("Username"))
                {
                    foreach (var err in apiErrors["Username"])
                    {
                        <p style="color:red">@err</p>
                    }
                }
            </div>

            <div class="form-group">
                <label>Phone Number</label>
                <InputNumber @bind-Value="signupModel.PhoneNumber" class="form-control" />
                @if (apiErrors.ContainsKey("PhoneNumber"))
                {
                    foreach (var err in apiErrors["PhoneNumber"])
                    {
                        <p style="color:red">@err</p>
                    }
                }
            </div>

            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="signupModel.Email" class="form-control" />
                @if (apiErrors.ContainsKey("Email"))
                {
                    foreach (var err in apiErrors["Email"])
                    {
                        <p style="color:red">@err</p>
                    }
                }
            </div>

            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="signupModel.Password" type="password" class="form-control" />
                @if (apiErrors.ContainsKey("Password"))
                {
                    foreach (var err in apiErrors["Password"])
                    {
                        <p style="color:red">@err</p>
                    }
                }
            </div>

            <div class="form-group">
                <label>Confirm Password</label>
                <InputText @bind-Value="signupModel.ConfirmPassword" type="password" class="form-control" />
                @if (apiErrors.ContainsKey("ConfirmPassword"))
                {
                    foreach (var err in apiErrors["ConfirmPassword"])
                    {
                        <p style="color:red">@err</p>
                    }
                }
            </div>

            <button type="button" class="btn-submit" @onclick="HandleSignup">Signup</button>

            <div class="login-link">
                Already have an account?
                <a href="/login">Login here</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private SignupDto signupModel = new();
    private Dictionary<string, string[]> apiErrors = new();

    private async Task HandleSignup()
{
    var (success, errors) = await SignupAPI.SignupAsync(signupModel);

    if (success)
    {
        apiErrors.Clear();
        signupModel = new(); 
        Nav.NavigateTo("/home");
    }
    else
    {
        apiErrors = errors;
        foreach (var kv in apiErrors)
        {
            Console.WriteLine($"Key: {kv.Key}, Errors: {string.Join(",", kv.Value)}");
        }

        StateHasChanged();
    }
}

}
