@page "/home"
@using Blazored.Toast.Services
@rendermode InteractiveServer
@using Electionapp.UI.Models;
@inject NavigationManager Nav
@inject IJSRuntime JS

<div class="home-page">
@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success text-center mt-3" role="alert">
        @successMessage
    </div>
}
<div class="hero">
    <div class="overlay">
        <h1>Welcome to Election Admin</h1>
        <p>Manage elections, candidates, and more.</p>
    </div>
</div>
</div>
@code {
    private string? successMessage;

    protected override void OnInitialized()
    {
        var uri = new Uri(Nav.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

        string email = query.TryGetValue("email", out var mail) ? mail.ToString() : string.Empty;
        string User = query.TryGetValue("user", out var user) ? user.ToString() : string.Empty;

        if (!string.IsNullOrEmpty(email) && email.Contains("@"))
        {
            var username = email.Split('@')[0]; 
            successMessage = $"👋 Hey {username}, login successful!";
        }
        else if (!string.IsNullOrEmpty(User))
        {
            if (User.Contains("@"))
            {
                var username = User.Split('@')[0];
                successMessage = $"👋 Hey {username}, login successful!";
            }
            else{
				var username = User;
                successMessage = $"👋 Hey {username}, login successful!";
            }
        }
        else
        {
            successMessage = "✅ Login was successful!";
        }
        
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !string.IsNullOrEmpty(successMessage))
        {
            await Task.Delay(3000); 
            successMessage = null;  
            StateHasChanged();      
        }
    }
}
<style>

    html, body {
        margin: 0;
        padding: 0;
        height: 100%;
        overflow: hidden; 
    }

    .home-page {
        height: 100vh;
        width: 100vw;
        overflow: hidden; 
        position: relative;
    }

    .hero {
        position: relative;
        height: 100vh;              
        width: 100%;
        background: url('/images/vote-bg.jpg') no-repeat center center;
        background-size: cover;     
        overflow: hidden;           
        margin: 0;
        padding: 0;
    }

    .overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0, 0, 0, 0.4); 
        padding: 30px 50px;
        border-radius: 10px;
        color: white;
    }

</style>